openapi: 3.0.0
info:
  title: Order Management API
  description: API for managing orders
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local server

paths:
  /orders:
    get:
      summary: Get all orders
      description: Retrieve a list of all orders
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '500':
          description: Error retrieving orders
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new order
      description: Create a new order with the provided details
      requestBody:
        description: Order object that needs to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '500':
          description: Error creating order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /orders/{orderId}:
    get:
      summary: Get an order by ID
      description: Retrieve an order by its ID
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderWithDetails'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error retrieving order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update an order
      description: Update the details of an existing order
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Order object that needs to be updated
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          description: Order updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error updating order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete an order
      description: Delete an order by its ID
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Order deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error deleting order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Order:
      type: object
      required:
        - customer
        - products
        - totalAmount
      properties:
        customer:
          type: string
          description: Customer ID
        products:
          type: array
          items:
            type: string
          description: List of product IDs
        orderDate:
          type: string
          format: date-time
          description: Date of the order
        status:
          type: string
          description: Order status
        totalAmount:
          type: number
          description: Total amount of the order
    OrderWithDetails:
      allOf:
        - $ref: '#/components/schemas/Order'
        - type: object
          properties:
            customer:
              $ref: '#/components/schemas/Customer'
            products:
              type: array
              items:
                $ref: '#/components/schemas/Product'
    Customer:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        details:
          type: object
          properties:
            price:
              type: string
            description:
              type: string
            color:
              type: string
        stock:
          type: number
    Error:
      type: object
      properties:
        message:
          type: string
    Message:
      type: object
      properties:
        message:
          type: string
